#include <stdio.h>

#define BLOCK_NUM   10
#define BLOCK_SIZE  100

typedef unsigned char u8_t;
typedef unsigned short u16_t;
typedef unsigned int u32_t;

struct memp{
    struct memp *next;
};

u8_t mem_base[ BLOCK_NUM * BLOCK_SIZE ];
struct memp *header;

void memp_init( )
{
    u8_t i = 0;
    struct memp *pos;
   
    header = 0;
    pos = (struct memp *)mem_base; 
    for( i = 0; i < BLOCK_NUM; i++ )
    {
        pos->next = header;
        header = pos;
        pos = (struct memp *)((u8_t *)pos + BLOCK_SIZE);
    }

    return;
}

void memp_print( )
{
    struct memp *tmp;
    int i = 0;
   
    tmp = header;
    while( 0 != tmp )
    {
        i++;
        printf( "%d: %#x\r\n", i, (unsigned int)tmp );
        tmp = tmp->next;
    }

    return;
}

int main( void )
{
    memp_init( );
    memp_print( );

    return 0;
}
